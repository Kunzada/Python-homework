# 1. Дан список. Определите, является ли он монотонно возрастающим 
# (то есть верно ли, что каждый элемент этого списка больше предыдущего).
# Выведите YES, если список монотонно возрастает и NO в противном случае.
# Решение оформите в виде функции IsAscending(A). 
# Input:
# 1 7 9
# Output:
# Yes
print("Введите цифры:")
numbers=list(input().split(' '))
def isAscending(A):
    i=0
    while i <= len(A)-1:
        if A[i]<A[i+1]:
            i+=1
        else:
            return "No"
        return "Yes"
print(isAscending(numbers))

def KthAppearance(A, a, k):
    cnt=0
    for i in range(len(A)):
        if(A[i]==a):
            cnt+=1
            if cnt==k:
                return i
    return -1
arr=[1, 2, 1, 3, 2, 3, 2, 3, 2, 2]
a=3
k=2
print(KthAppearance(arr,a,k))
##############
# Сортировка #
##############

##1
# Системный администратор вспомнил, что давно не делал архива пользовательских файлов.
# Однако, объем диска, куда он может поместить архив, может быть меньше чем суммарный объем архивируемых файлов.
# Известно, какой объем занимают файлы каждого пользователя.
# Напишите программу, которая по заданной информации о пользователях и свободному объему на архивном диске определит максимальное число пользователей, чьи данные можно поместить в архив, при этом используя свободное место как можно более полно.
# Программа получает на вход в одной строке число S размер свободного места на диске, и число N — количество пользователей, после этого идет N чисел — объем данных каждого пользователя, записанных каждое в отдельной строке.
# Выведите наибольшее количество пользователей, чьи данные могут быть помешены в архив.

def max_cnt_user(S,V):
    cnt=0
    used_space=0
    V.sort()
    for i in V:
        if used_space+i<=S:
            cnt+=1
            used_space+=i
        else: break
    return cnt
try:
    print("Введите S и N через пробел:")
    S,N=map(int,input().split())
    print("Введите обьем:")
    V=[int(input()) for _ in range(N)]
    print( max_cnt_user(S,V))
except:
    print("Вы ввели не цифру")

## 2. 
# После затянувшегося совещания директор фирмы решил заказать такси, чтобы развезти сотрудников по домам. Он заказал N машин —ровно столько, сколь у него сотрудников. Однако, когда они подъехали, оказалось, что у каждого водителя такси свой тариф за 1 километр.
# Директор знает, какому сотруднику сколько километров от работы до дома (к сожалению, все сотрудники живут в разных направлениях, поэтому нельзя отправить двух сотрудников на одной машине). Теперь директор хочет определить, сколько придется заплатить за перевозку всех сотрудников. Естественно, директор хочет заплатить как можно меньшую сумму.
# В первой строке записаны N чисел через пробел, задающих расстояния в километрах от работы до домов сотрудников компании. Во второй строке записаны N чисел — тарифы за проезд одного километра в такси.
# Выведите одно целое число — наименьшую сумму, которую придется заплатить за доставку всех сотрудников.

distance=sorted(map(int,input("Введите расстояния: ").split()),reverse=True)
traffics=sorted([int(x) for x in input("Введите тарифы: ").split()][:len(distance)])
result=list()
for i,j in zip(distance,traffics):
    result.append(i*j)
print(sum(result))

# 1. Дана последовательность чисел, состоящая только из чисел 1, ..., 9.
#  Последовательность завершается числом 0. Каждое число записано в отдельной строке.
# Подсчитайте, сколько раз в этой последовательности встречаются значения 1, 2, ..., 9.
#  Сохранять всю последовательность введенных чисел в списке нельзя.
# Программа должна вывести ровно 9 чисел: количество единиц, двоек, ..., девяток в данной последовательности.

def cnt_number_list(numbers):
        tumpl_num={i:0 for i in range(1,10)}
        num=set(numbers)
        tumpl_num.update({i:numbers.count(i) for i in num})  
        print (*tumpl_num.values())

try:
    print("Введите цифры:")
    numbers=[]
    while True:
        num=int(input())
        if num>=1 and num<=9:
            numbers.append(num)
        elif num<=0:
            break
        else:
            print("Диапозон 1 до 9")
            break
    cnt_number_list(numbers)
except:
    print("Введите цифру (0-9)!!!")


########################
# Регулярные выражения #
########################

import re
# Задание №1.  
# Напишите программу, в которой необходимо вывести первое слово из строки.    
string="My name is Nargiza"
result=re.findall("^\w+",string)
print(result)

#  Задание №2.
# Напишите программу, которая извлечет дату из строки.  
date="Lorem aksjdfajs a;slkdfjlasjdf alsdjflkas 25.09.2024asdkfaf30.04.2000sjdfa"
result1=re.findall("\d{2}.\d{2}.\d{4}",date)
print(result1)

# Задание №3.  
# Напишите программу, в которой я ввожу телефонный номер. Необходимо проверить правильность формата телефонного номера.
phoneNumber=input("Введите телефонный номер:")
if re.findall("[7-8]{1}[0-9]{10}",phoneNumber)and len(phoneNumber)==11:
    print("Yes")
else:
    print("No")
